[{"/Users/karacaputo/turing/personal-projects/underrated/src/index.js":"1","/Users/karacaputo/turing/personal-projects/underrated/src/App/App.js":"2","/Users/karacaputo/turing/personal-projects/underrated/src/Login/Login.js":"3","/Users/karacaputo/turing/personal-projects/underrated/src/MovieGrid/MovieGrid.js":"4","/Users/karacaputo/turing/personal-projects/underrated/src/apiCalls.js":"5","/Users/karacaputo/turing/personal-projects/underrated/src/MovieDetails/MovieDetails.js":"6","/Users/karacaputo/turing/personal-projects/underrated/src/Poster/Poster.js":"7","/Users/karacaputo/turing/personal-projects/underrated/src/ListItem/ListItem.js":"8","/Users/karacaputo/turing/personal-projects/underrated/src/MovieTrailers/MovieTrailers.js":"9","/Users/karacaputo/turing/personal-projects/underrated/src/StarRating/StarRating.js":"10","/Users/karacaputo/turing/personal-projects/underrated/src/Search/Search.js":"11","/Users/karacaputo/turing/personal-projects/underrated/src/Banner/Banner.js":"12"},{"size":280,"mtime":1608338788970,"results":"13","hashOfConfig":"14"},{"size":8318,"mtime":1609694480069,"results":"15","hashOfConfig":"14"},{"size":1584,"mtime":1609451685291,"results":"16","hashOfConfig":"14"},{"size":530,"mtime":1608338788966,"results":"17","hashOfConfig":"14"},{"size":2061,"mtime":1609694480079,"results":"18","hashOfConfig":"14"},{"size":6719,"mtime":1611088054709,"results":"19","hashOfConfig":"14"},{"size":544,"mtime":1609694480075,"results":"20","hashOfConfig":"14"},{"size":391,"mtime":1609694480071,"results":"21","hashOfConfig":"14"},{"size":1483,"mtime":1609694480075,"results":"22","hashOfConfig":"14"},{"size":1248,"mtime":1609696258450,"results":"23","hashOfConfig":"14"},{"size":566,"mtime":1611088054710,"results":"24","hashOfConfig":"14"},{"size":1594,"mtime":1609694480069,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"v6ck4e",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/karacaputo/turing/personal-projects/underrated/src/index.js",[],["56","57"],"/Users/karacaputo/turing/personal-projects/underrated/src/App/App.js",["58","59","60"],"import React, { Component } from 'react';\nimport Login from '../Login/Login';\nimport MovieGrid from '../MovieGrid/MovieGrid';\nimport MovieDetails from '../MovieDetails/MovieDetails';\nimport Search from '../Search/Search';\nimport Banner from '../Banner/Banner';\nimport { fetchMovies, fetchSingleMovie, postLoginCredentials } from '../apiCalls';\nimport { Route, NavLink } from 'react-router-dom';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      error: '',\n      currentUser: null,\n      input: '',\n      dropdownValue: 'all',\n      ratingValue: 'any'\n    }\n  }\n  \n  componentDidMount = () => {\n    fetchMovies()\n    .then(allMovies => this.setState({ movies: allMovies.movies}))\n    .then(() => this.findMovieGenres())\n    .catch(error => this.setState({ error: error.message }))\n  }\n\n  findMovieGenres = () => {\n    this.state.movies.map(movie => {\n      fetchSingleMovie(movie.id)\n      .then(singleMovie => movie.genres = singleMovie.movie.genres)\n    })\n  }\n\n  validateLogin = (loginEmail, loginPassword) => {\n    const credentials = {\n      email: loginEmail,\n      password: loginPassword\n    }\n\n    postLoginCredentials(credentials)\n    .then(user => this.setState({ currentUser: user.user }))\n    .catch(error => this.setState({ error: error.message}))\n  }\n\n  clearError = () => {\n    this.setState({ error: '' })\n  }\n\n  signOut = () => {\n    this.setState({ currentUser: null })\n  }\n\n  get filterMoviesBySelection() {\n    const filterByGenre = this.state.movies.filter(movie => {\n      if (this.state.dropdownValue !== 'all' && movie.genres) {\n        return movie.genres.includes(this.state.dropdownValue)\n      } else {\n        return this.state.movies\n      }\n    })\n\n    const filterByRating = filterByGenre.filter(movie => {\n      if (this.state.ratingValue !== 'any') {\n        const roundedRating = parseInt(movie.average_rating)\n        return roundedRating === parseInt(this.state.ratingValue)\n      } else {\n        return filterByGenre\n      }\n    })\n\n    return filterByRating.filter(movie => {\n      return movie.title.toLowerCase().includes(this.state.input)\n    })\n  }\n\n  getUserInput = (inputValue) => {\n    this.setState({input: inputValue})\n  }\n\n  handleDropdownValue = (event) => {\n    this.setState({ dropdownValue: event.target.name})\n  }\n\n  handleRatingValue = (event) => {\n    this.setState({ ratingValue: event.target.value })\n  }\n\n  clearFilters = () => {\n    this.setState({ input: '', dropdownValue: 'all', ratingValue: 'any' })\n  }\n\n  render() {\n    return(\n      <main>\n        <header>\n          <h1 className='page-title'>underrated</h1>\n          <nav>\n            <NavLink exact to=\"/\" className='nav-labels'>\n              all movies\n            </NavLink>\n            <p className='nav-labels'>watchlist</p>\n            <DropdownButton \n              className='nav-labels' \n              title='account'>\n                {!this.state.currentUser &&\n                  <Login \n                    validateLogin={this.validateLogin} \n                    error={this.state.error} \n                    clearError={this.clearError}\n                  />\n                }\n                {this.state.currentUser &&\n                  <section>\n                    <p>Hello, {this.state.currentUser.name}!</p>\n                    <button onClick={this.signOut}>Sign Out</button>\n                  </section>     \n                }\n            </DropdownButton>\n          </nav>\n        </header>\n        <Route \n          exact \n          path=\"/\" \n          render={() => {\n            return (\n              <section>\n                <Banner />\n                <Search \n                  getUserInput={this.getUserInput} \n                />\n                <section className=\"genre-filter\">\n                  <p className=\"dropdown-text\">showing <span className=\"active-text\">{this.state.dropdownValue}</span> movies</p>\n                  <DropdownButton\n                    title=''\n                    className='genre-dropdown'>\n                    <button onClick={() => this.setState({ dropdownValue: 'all' })}>all</button>\n                    <button name=\"Action\" onClick={(event) => this.handleDropdownValue(event)}>action</button>\n                    <button name=\"Adventure\" onClick={(event) => this.handleDropdownValue(event)}>adventure</button>\n                    <button name=\"Animation\" onClick={(event) => this.handleDropdownValue(event)}>animation</button>\n                    <button name=\"Comedy\" onClick={(event) => this.handleDropdownValue(event)}>comedy</button>\n                    <button name=\"Crime\" onClick={(event) => this.handleDropdownValue(event)}>crime</button>\n                    <button name=\"Drama\" onClick={(event) => this.handleDropdownValue(event)}>drama</button>\n                    <button name=\"Family\" onClick={(event) => this.handleDropdownValue(event)}>family</button>\n                    <button name=\"Fantasy\" onClick={(event) => this.handleDropdownValue(event)}>fantasy</button>\n                    <button name=\"History\" onClick={(event) => this.handleDropdownValue(event)}>history</button>\n                    <button name=\"Horror\" onClick={(event) => this.handleDropdownValue(event)}>horror</button>\n                    <button name=\"Music\" onClick={(event) => this.handleDropdownValue(event)}>music</button>\n                    <button name=\"Romance\" onClick={(event) => this.handleDropdownValue(event)}>romance</button>\n                    <button name=\"Science fiction\" onClick={(event) => this.handleDropdownValue(event)}>science fiction</button>\n                    <button name=\"Thriller\" onClick={(event) => this.handleDropdownValue(event)}>thriller</button>\n                    <button name=\"War\" onClick={(event) => this.handleDropdownValue(event)}>war</button>\n                    <button name=\"Western\" onClick={(event) => this.handleDropdownValue(event)}>western</button>\n                  </DropdownButton>\n                  <p className=\"dropdown-text\">with <span className=\"active-text\">{this.state.ratingValue}</span> rating</p>\n                  <DropdownButton\n                    title=''\n                    className='rating-dropdown'>\n                    <button onClick={() => this.setState({ ratingValue: 'any' })}>any</button>\n                    <button name=\"one\" value=\"1\" onClick={(event) => this.handleRatingValue(event)}>one</button>\n                    <button name=\"two\" value=\"2\" onClick={(event) => this.handleRatingValue(event)}>two</button>\n                    <button name=\"three\" value=\"3\" onClick={(event) => this.handleRatingValue(event)}>three</button>\n                    <button name=\"four\" value=\"4\" onClick={(event) => this.handleRatingValue(event)}>four</button>\n                    <button name=\"five\" value=\"5\" onClick={(event) => this.handleRatingValue(event)}>five</button>\n                    <button name=\"six\" value=\"6\" onClick={(event) => this.handleRatingValue(event)}>six</button>\n                    <button name=\"seven\" value=\"7\" onClick={(event) => this.handleRatingValue(event)}>seven</button>\n                    <button name=\"eight\" value=\"8\" onClick={(event) => this.handleRatingValue(event)}>eight</button>\n                    <button name=\"nine\" value=\"9\" onClick={(event) => this.handleRatingValue(event)}>nine</button>\n                    <button name=\"ten\" value=\"10\" onClick={(event) => this.handleRatingValue(event)}>ten</button>\n                  </DropdownButton>\n                  {this.state.input !== '' || this.state.dropdownValue !== 'all' || this.state.ratingValue !== 'any' &&\n                    <button className=\"clear\" onClick={() => this.clearFilters()}>clear</button>\n                  }\n                </section>\n                <MovieGrid\n                  movies={this.filterMoviesBySelection}  \n                />\n              </section>\n            )\n          }}\n        />\n        <Route \n          exact\n          path=\"/movie/:id\"\n          render={( { match }) => {\n            return (\n              <MovieDetails \n                id={match.params.id}\n                currentUser={this.state.currentUser}\n             />)\n          }}\n        />\n      </main>\n    ) \n  }\n}\n\nexport default App;","/Users/karacaputo/turing/personal-projects/underrated/src/Login/Login.js",["61"],"import React, { Component } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Login.css';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n  handleClick(event) {\n    event.preventDefault()\n  }\n\n  handleChange(event) {\n    this.props.clearError()\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  determineError = () => {\n    if (this.props.error) {\n      return (\n        <section>\n          <p>{this.props.error}</p>\n        </section>\n      )\n    }\n  }\n\n  submitLogin = () => {\n    this.props.validateLogin(this.state.email, this.state.password);\n    this.clearInputs()\n  }\n\n  clearInputs = () => {\n    this.setState({ email: '', password: '' })\n  }\n\n  render() {\n    return(\n      <section>\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          value={this.state.email}\n          onClick={(event) => this.handleClick(event)}\n          onChange={(event) => this.handleChange(event)}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={this.state.password}\n          onClick={(event) => this.handleClick(event)}\n          onChange={(event) => this.handleChange(event)}\n        />\n        {this.determineError()}\n        <button \n          className=\"submit-button\" \n          onClick={this.submitLogin}>\n          SUBMIT\n        </button>\n      </section>\n    )\n  }\n}\n\nexport default Login;","/Users/karacaputo/turing/personal-projects/underrated/src/MovieGrid/MovieGrid.js",[],"/Users/karacaputo/turing/personal-projects/underrated/src/apiCalls.js",[],"/Users/karacaputo/turing/personal-projects/underrated/src/MovieDetails/MovieDetails.js",["62","63","64"],"import React, { Component } from \"react\";\nimport { fetchSingleMovie, fetchUserRatings, postUserRating, deleteUserRating } from \"../apiCalls\"; \nimport ListItem from \"../ListItem/ListItem\";\nimport MovieTrailers from \"../MovieTrailers/MovieTrailers\";\nimport StarRating from \"../StarRating/StarRating\";\nimport \"./MovieDetails.css\";\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      singleMovie: {},\n      error: \"\",\n      currentUserRating: null,\n      onWatchlist: false\n    }\n  }\n  \n  componentDidMount() {\n    window.scrollTo(0, 0)\n    fetchSingleMovie(this.props.id)\n    .then(singleMovie => this.setState({ singleMovie: singleMovie.movie }))\n    .then(() => this.getUserRatings())\n    .catch(error => this.setState({ error: error.message}))\n  }\n\n  componentDidUpdate(prevProps) {\n    window.scrollTo(0, 0)\n    if(prevProps.currentUser !== this.props.currentUser) {\n      this.setState({ currentUserRating: null, error: \"\" })\n      this.getUserRatings()\n    }\n  }\n\n  setStarRating = (rating) => {\n    let ratingId;\n    let userId;\n    \n    if (this.props.currentUser && this.state.currentUserRating) {\n      ratingId = this.state.currentUserRating.id\n      userId = this.props.currentUser.id\n\n      deleteUserRating(userId, ratingId)\n      .then(response => console.log('delete response', response))\n      .catch(error => this.setState({ error: error.message }))\n\n      this.createNewRating(userId, rating)\n\n    } else if (this.props.currentUser) {\n      userId = this.props.currentUser.id\n\n      this.createNewRating(userId, rating)\n    }\n  }\n\n  createNewRating = (userId, rating) => {\n    const newRating = {\n      movie_id: this.state.singleMovie.id,\n      rating: +rating\n    }\n    \n    console.log('newRating obj', newRating)\n    \n    postUserRating(userId, newRating)\n    .then(() => this.updateUserRating())\n    .catch(error => this.setState({ error: error.message }))\n  }\n\n  getUserRatings() {\n    this.setState({ formattedRating: this.state.singleMovie.average_rating.toFixed(1)})\n   \n    if (this.props.currentUser) {\n      this.updateUserRating()\n    }\n  }\n\n  updateUserRating = () => {\n    fetchUserRatings(this.props.currentUser.id)\n    .then(ratings => { \n      console.log('allratings', ratings)\n      const userRating = ratings.ratings.find(rating => {\n        return rating.movie_id === this.state.singleMovie.id\n      })\n      console.log('userRating', userRating)\n      this.setState({ currentUserRating: userRating })\n    })\n    .catch(error => this.setState({ error: error.message}))  \n  }\n\n  formatGenres = () => {\n    if (!this.state.singleMovie.genres) {\n      return <p className=\"unavailable-genres\">Unavailable</p>\n    } else if (this.state.singleMovie.genres.length > 1) {\n      let commaList = this.state.singleMovie.genres.map(genre => {\n        return(\n          <p key={Math.random()} className=\"genre\">{genre}</p>\n        )\n      })\n      return commaList;\n    } else {\n      return <p className=\"genre\">{this.state.singleMovie.genres[0]}</p>;\n    }\n  }\n\n  generateListItem() {\n    return (\n      <section>\n        <ListItem \n          key={Math.random()}\n          label=\"Release Date\"\n          body={new Date(this.state.singleMovie.release_date).toLocaleDateString()}\n        />\n        <ListItem \n          key={Math.random()}\n          label=\"Runtime\"\n          body={`${this.state.singleMovie.runtime} mins`}\n        />\n        <ListItem \n          key={Math.random()}\n          label=\"Budget\"\n          body={`$${new Intl.NumberFormat(\"en-US\").format(this.state.singleMovie.budget)}`}\n        />\n        <ListItem \n          key={Math.random()}\n          label=\"Revenue\"\n          body={`$${new Intl.NumberFormat(\"en-US\").format(this.state.singleMovie.revenue)}`}\n        />\n      </section>\n    )\n  }\n\n  toggleWatchlist = () => {\n    if (this.state.onWatchlist === false) {\n      this.setState({ onWatchlist: true })\n    } else {\n      this.setState({ onWatchlist: false})\n    }\n  }\n\n\n  render() {\n    return(\n      <section className=\"movie-details\">\n        <section className=\"banner-container\">\n          <img src={this.state.singleMovie.backdrop_path} className=\"banner-img\"/>\n        </section>\n        <section className=\"movie-info\">\n          <section className=\"movie-aside\">\n            <img src={this.state.singleMovie.poster_path} className=\"poster-img\" />\n            {this.generateListItem()}\n          </section>\n          <section className=\"movie-main\">\n            <section className=\"backdrop-overlay\"> \n              <section className=\"responsive-poster\">\n                <img src={this.state.singleMovie.poster_path} className=\"poster-img\" />\n              </section>\n              <section className=\"main-header-details\">\n                <h1 className=\"title\">{this.state.singleMovie.title}</h1>\n                <p className=\"tagline\">{this.state.singleMovie.tagline}</p>\n                <p className=\"rating\">\n                  <span className=\"rating-star\">☆ {this.state.formattedRating}</span>/10\n                </p>\n                <section className=\"genre-list\">\n                  {this.formatGenres()}\n                </section>\n              </section>  \n            </section>\n            <section className=\"overview-box\">\n              <section className=\"rating-watchlist\">\n                <StarRating \n                  currentUser={this.props.currentUser}\n                  currentUserRating={!this.state.currentUserRating ? 0 : this.state.currentUserRating.rating}\n                  canEdit={!this.props.currentUser ? false : true} \n                  setStarRating={this.setStarRating}\n                />\n                {this.state.onWatchlist === true && <button className=\"on-watchlist-button\" onClick={() => this.toggleWatchlist()}>On Watchlist</button>}\n                {this.state.onWatchlist === false && <button className=\"add-watchlist-button\" onClick={() => this.toggleWatchlist()}>+ Add to Watchlist</button>}\n              </section>\n\n              {/* Responsive genres list */}\n              <section className=\"responsive-genre-list\">\n                  {this.formatGenres()}\n              </section>\n              \n              <h3>Synopsis</h3>\n              <p className=\"overview\">{this.state.singleMovie.overview}</p>\n              <section className=\"responsive-list\">\n                {this.generateListItem()}\n              </section>\n            </section>\n            <section className=\"trailer-box\">\n              <h3 className=\"trailer-header\">Trailers</h3>\n              <MovieTrailers \n                id={this.props.id} \n              />\n            </section>\n          </section>\n        </section>\n      </section>\n    )\n  }\n}\n\nexport default MovieDetails;","/Users/karacaputo/turing/personal-projects/underrated/src/Poster/Poster.js",[],"/Users/karacaputo/turing/personal-projects/underrated/src/ListItem/ListItem.js",[],["65","66"],"/Users/karacaputo/turing/personal-projects/underrated/src/MovieTrailers/MovieTrailers.js",["67"],"import React, { Component } from 'react';\nimport { fetchMovieTrailers } from '../apiCalls';\nimport { Carousel } from 'react-responsive-carousel';\nimport ReactPlayer from 'react-player';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\nimport './MovieTrailers.css';\n\nclass MovieTrailers extends Component {\n  constructor() {\n    super();\n    this.state = {\n      trailers: [],\n      error: ''\n    }\n  } \n\n  componentDidMount() {\n    fetchMovieTrailers(this.props.id)\n    .then(movieTrailers => this.setState({ trailers: movieTrailers.videos }))\n    .catch(error => this.setState({ error: error.message }))\n  }\n\n  determineAvailableTrailers = () => {\n    return this.state.trailers.find(trailer => {\n      return trailer.site === \"YouTube\"\n    })\n  }\n  \n  formatTrailers = () => {\n    return this.state.trailers.map(trailer => {\n      if(trailer.site === \"YouTube\") {\n        return (\n          <ReactPlayer \n            key={trailer.id}\n            url={`https://www.youtube.com/watch?v=${trailer.key}`}\n          />  \n        )  \n      }\n    })\n  }\n\n  render() {\n    return(\n      <section className=\"trailers\">\n        {this.determineAvailableTrailers() &&\n          <Carousel\n            showThumbs={false}\n          >\n            {this.formatTrailers()}\n          </Carousel>  \n        }\n        {!this.determineAvailableTrailers() &&\n          <p>Sorry, no available trailers for this movie.</p>\n        }\n      </section>\n    )\n  }\n}\n\nexport default MovieTrailers;","/Users/karacaputo/turing/personal-projects/underrated/src/StarRating/StarRating.js",[],"/Users/karacaputo/turing/personal-projects/underrated/src/Search/Search.js",[],"/Users/karacaputo/turing/personal-projects/underrated/src/Banner/Banner.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":33,"column":33,"nodeType":"74","messageId":"75","endLine":33,"endColumn":35},{"ruleId":"76","severity":1,"message":"77","line":175,"column":82,"nodeType":"78","messageId":"79","endLine":175,"endColumn":84},{"ruleId":"76","severity":1,"message":"77","line":175,"column":118,"nodeType":"78","messageId":"79","endLine":175,"endColumn":120},{"ruleId":"80","severity":1,"message":"81","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":145,"column":11,"nodeType":"86","endLine":145,"endColumn":83},{"ruleId":"84","severity":1,"message":"85","line":149,"column":13,"nodeType":"86","endLine":149,"endColumn":84},{"ruleId":"84","severity":1,"message":"85","line":155,"column":17,"nodeType":"86","endLine":155,"endColumn":88},{"ruleId":"68","replacedBy":"87"},{"ruleId":"70","replacedBy":"88"},{"ruleId":"72","severity":1,"message":"89","line":30,"column":44,"nodeType":"74","messageId":"90","endLine":30,"endColumn":46},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-unused-vars","'Dropdown' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["91"],["92"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation"]