{"version":3,"sources":["Login/Login.js","Poster/Poster.js","MovieGrid/MovieGrid.js","apiCalls.js","ListItem/ListItem.js","MovieTrailers/MovieTrailers.js","StarRating/StarRating.js","MovieDetails/MovieDetails.js","Search/Search.js","Banner/Banner.js","App/App.js","index.js"],"names":["Login","determineError","props","error","submitLogin","validateLogin","state","email","password","clearInputs","setState","event","preventDefault","this","clearError","target","name","value","type","placeholder","onClick","handleClick","onChange","handleChange","className","Component","Poster","id","title","rating","image","to","src","alt","toFixed","MovieGrid","movies","getSingleMovie","posters","map","movie","average_rating","poster_path","endpoint","fetchSingleMovie","fetch","then","response","ok","Error","json","fetchMovieTrailers","ListItem","label","body","MovieTrailers","determineAvailableTrailers","trailers","find","trailer","site","formatTrailers","url","key","movieTrailers","videos","catch","message","showThumbs","StarRating","handleStarChange","newRating","setStarRating","currentUserRating","prevProps","currentUser","handleRatingText","edit","canEdit","count","size","activeColor","Math","random","MovieDetails","ratingId","userId","method","headers","deleteUserRating","console","log","createNewRating","movie_id","singleMovie","JSON","stringify","postUserRating","updateUserRating","ratings","userRating","formatGenres","genres","length","genre","toggleWatchlist","onWatchlist","window","scrollTo","getUserRatings","formattedRating","Date","release_date","toLocaleDateString","runtime","Intl","NumberFormat","format","budget","revenue","backdrop_path","generateListItem","tagline","overview","Search","searchByInput","input","toLowerCase","getUserInput","Banner","displayTrailer","trailerDisplay","width","height","controls","muted","playing","loop","config","youtube","playerVars","disablekb","fs","iv_load_policy","modestbranding","currentMovie","App","componentDidMount","allMovies","findMovieGenres","loginEmail","loginPassword","loginCredentials","user","signOut","inputValue","handleDropdownValue","dropdownValue","handleRatingValue","ratingValue","clearFilters","exact","DropdownButton","path","render","filterMoviesBySelection","match","params","filterByGenre","filter","includes","parseInt","router","basename","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e6e31307.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Login.css';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n  handleClick(event) {\n    event.preventDefault()\n  }\n\n  handleChange(event) {\n    this.props.clearError()\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  determineError = () => {\n    if (this.props.error) {\n      return (\n        <section>\n          <p>{this.props.error}</p>\n        </section>\n      )\n    }\n  }\n\n  submitLogin = () => {\n    this.props.validateLogin(this.state.email, this.state.password);\n    this.clearInputs()\n  }\n\n  clearInputs = () => {\n    this.setState({ email: '', password: '' })\n  }\n\n  render() {\n    return(\n      <section>\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          value={this.state.email}\n          onClick={(event) => this.handleClick(event)}\n          onChange={(event) => this.handleChange(event)}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={this.state.password}\n          onClick={(event) => this.handleClick(event)}\n          onChange={(event) => this.handleChange(event)}\n        />\n        {this.determineError()}\n        <button \n          className=\"submit-button\" \n          onClick={this.submitLogin}>\n          SUBMIT\n        </button>\n      </section>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport './Poster.css';\nimport { Link } from 'react-router-dom';\n\nconst Poster = ({ id, title, rating, image }) => {\n\n  return(\n    <Link to={`/movie/${id}`}>\n      <section className='poster' id={id}>\n        <img className='card-img' src={image} alt={title} />\n        <p className='poster-title'>{title}</p>\n        <p className='poster-rating'>&#9734; {rating.toFixed(1)}/10</p>\n        <p className='poster-rating-mini'>&#9734; {rating.toFixed(1)}/10</p>\n      </section>\n    </Link>\n  )\n}\n\nexport default Poster;","import React from 'react';\nimport Poster from '../Poster/Poster';\nimport './MovieGrid.css';\n\nconst MovieGrid = ({ movies, getSingleMovie }) => {\n  const posters = movies.map(movie => {\n    return(\n      <Poster\n        id={movie.id}\n        title={movie.title}\n        rating={movie.average_rating}\n        image={movie.poster_path}\n        getSingleMovie={getSingleMovie}\n        key={movie.id}\n      />  \n    )\n  })\n  return(\n    <section className='movie-grid'>\n      {posters}\n    </section>\n  )\n}\n\nexport default MovieGrid;\n\n","const endpoint = `https://rancid-tomatillos.herokuapp.com/api/v2`;\n\nexport const fetchMovies = () => {\n  return fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies')\n  .then((response) => {\n    if(!response.ok) {\n      throw Error('Sorry! We\\'ve encountered an error')\n    }\n    return response.json()\n  })\n}\n\nexport const fetchSingleMovie = (id) => {\n  return fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${+id}`)\n  .then((response) => {\n    if(!response.ok) {\n      throw Error('Sorry! We\\'ve encountered an error')\n    }\n    return response.json()\n  })\n}\n\nexport const fetchMovieTrailers = (id) => {\n  return fetch(`${endpoint}/movies/${+id}/videos`)\n  .then(response => response.json());\n}\n\nexport const postLoginCredentials = (loginCredentials) => {\n  return fetch(`${endpoint}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }, \n    body: JSON.stringify(loginCredentials)\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw Error('Username and/or password is incorrect. Please try again.')\n      }\n      return response.json()\n    })\n}\n\nexport const fetchUserRatings = (id) => {\n  return fetch(`${endpoint}/users/${+id}/ratings`)\n  .then((response) => {\n    if (!response.ok) {\n      throw Error('Sorry! We couldn\\'t retrieve your rating.')\n    }\n    return response.json()\n  })\n}\n\nexport const postUserRating = (id, rating) => {\n  return fetch(`${endpoint}/users/${id}/ratings`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }, \n    body: JSON.stringify(rating)\n  })\n  .then((response) => {\n    if (!response.ok) {\n      throw Error\n    }\n    return response.json()\n  })\n}\n\nexport const deleteUserRating = (id, ratingId) => {\n  return fetch(`${endpoint}/users/${+id}/ratings/${+ratingId}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  })\n  .then((response) => {\n    if (!response.ok) {\n      throw Error('Sorry! We couldn\\'t retrieve your rating.')\n    }\n    return response.json()\n  })\n}","import React from 'react';\nimport './ListItem.css';\n\nconst ListItem =  ({ label, body })  => {\n\n  const formatBody = () => {\n    if (body === '$0') {\n      return '-'\n    }\n    return body;\n  }\n\n  return (\n    <section className='details-box'>\n      <p className='l-details'><b>{label}</b></p>\n      <p className='r-details'>{formatBody()}</p>\n    </section>\n  );\n}\n\nexport default ListItem;","import React, { Component } from 'react';\nimport { fetchMovieTrailers } from '../apiCalls';\nimport { Carousel } from 'react-responsive-carousel';\nimport ReactPlayer from 'react-player';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\nimport './MovieTrailers.css';\n\nclass MovieTrailers extends Component {\n  constructor() {\n    super();\n    this.state = {\n      trailers: [],\n      error: ''\n    }\n  } \n\n  componentDidMount() {\n    fetchMovieTrailers(this.props.id)\n    .then(movieTrailers => this.setState({ trailers: movieTrailers.videos }))\n    .catch(error => this.setState({ error: error.message }))\n  }\n\n  determineAvailableTrailers = () => {\n    return this.state.trailers.find(trailer => {\n      return trailer.site === \"YouTube\"\n    })\n  }\n  \n  formatTrailers = () => {\n    return this.state.trailers.map(trailer => {\n      if(trailer.site === \"YouTube\") {\n        return (\n          <ReactPlayer \n            key={trailer.id}\n            url={`https://www.youtube.com/watch?v=${trailer.key}`}\n          />  \n        )  \n      }\n    })\n  }\n\n  render() {\n    return(\n      <section className=\"trailers\">\n        {this.determineAvailableTrailers() &&\n          <Carousel\n            showThumbs={false}\n          >\n            {this.formatTrailers()}\n          </Carousel>  \n        }\n        {!this.determineAvailableTrailers() &&\n          <p>Sorry, no available trailers for this movie.</p>\n        }\n      </section>\n    )\n  }\n}\n\nexport default MovieTrailers;","import ReactStars from \"react-rating-stars-component\";\nimport React, { Component } from \"react\";\n\nclass StarRating extends Component { \n  constructor() {\n    super();\n    this.state = {\n      rating: 0\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ rating: this.props.currentUserRating })\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.currentUserRating !== prevProps.currentUserRating) {\n      this.setState({ rating: this.props.currentUserRating })\n    }\n  }\n  \n  handleStarChange = (newRating) => {\n    this.setState({ rating: newRating })\n    this.props.setStarRating(newRating)\n  }\n\n  handleRatingText() {\n    if (this.props.currentUser === null) {\n      return <p>Please log in to rate</p>\n    } else if (this.props.currentUserRating === 0) {\n      return <p>Rate this movie</p>\n    }\n    return <p>Your rating is {this.state.rating}</p>\n  }\n\n  render() {\n    return(\n      <section>\n        {this.handleRatingText()}\n        <ReactStars\n          key={Math.random()}\n          value={this.state.rating}\n          edit={this.props.canEdit}\n          count={10}\n          onChange={this.handleStarChange}\n          size={24}\n          activeColor=\"#ffd700\"\n        />\n      </section>\n    )\n  }\n}\n\nexport default StarRating;","import React, { Component } from \"react\";\nimport { fetchSingleMovie, fetchUserRatings, postUserRating, deleteUserRating } from \"../apiCalls\"; \nimport ListItem from \"../ListItem/ListItem\";\nimport MovieTrailers from \"../MovieTrailers/MovieTrailers\";\nimport StarRating from \"../StarRating/StarRating\";\nimport \"./MovieDetails.css\";\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      singleMovie: {},\n      error: \"\",\n      currentUserRating: null,\n      onWatchlist: false\n    }\n  }\n  \n  componentDidMount() {\n    window.scrollTo(0, 0)\n    fetchSingleMovie(this.props.id)\n    .then(singleMovie => this.setState({ singleMovie: singleMovie.movie }))\n    .then(() => this.getUserRatings())\n    .catch(error => this.setState({ error: error.message}))\n  }\n\n  componentDidUpdate(prevProps) {\n    window.scrollTo(0, 0)\n    if(prevProps.currentUser !== this.props.currentUser) {\n      this.setState({ currentUserRating: null, error: \"\" })\n      this.getUserRatings()\n    }\n  }\n\n  setStarRating = (rating) => {\n    let ratingId;\n    let userId;\n    \n    if (this.props.currentUser && this.state.currentUserRating) {\n      ratingId = this.state.currentUserRating.id\n      userId = this.props.currentUser.id\n\n      deleteUserRating(userId, ratingId)\n      .then(response => console.log('delete response', response))\n      .catch(error => this.setState({ error: error.message }))\n\n      this.createNewRating(userId, rating)\n\n    } else if (this.props.currentUser) {\n      userId = this.props.currentUser.id\n\n      this.createNewRating(userId, rating)\n    }\n  }\n\n  createNewRating = (userId, rating) => {\n    const newRating = {\n      movie_id: this.state.singleMovie.id,\n      rating: +rating\n    }\n    \n    console.log('newRating obj', newRating)\n    \n    postUserRating(userId, newRating)\n    .then(() => this.updateUserRating())\n    .catch(error => this.setState({ error: error.message }))\n  }\n\n  getUserRatings() {\n    this.setState({ formattedRating: this.state.singleMovie.average_rating.toFixed(1)})\n   \n    if (this.props.currentUser) {\n      this.updateUserRating()\n    }\n  }\n\n  updateUserRating = () => {\n    fetchUserRatings(this.props.currentUser.id)\n    .then(ratings => { \n      console.log('allratings', ratings)\n      const userRating = ratings.ratings.find(rating => {\n        return rating.movie_id === this.state.singleMovie.id\n      })\n      console.log('userRating', userRating)\n      this.setState({ currentUserRating: userRating })\n    })\n    .catch(error => this.setState({ error: error.message}))  \n  }\n\n  formatGenres = () => {\n    if (!this.state.singleMovie.genres) {\n      return <p className=\"unavailable-genres\">Unavailable</p>\n    } else if (this.state.singleMovie.genres.length > 1) {\n      let commaList = this.state.singleMovie.genres.map(genre => {\n        return(\n          <p key={Math.random()} className=\"genre\">{genre}</p>\n        )\n      })\n      return commaList;\n    } else {\n      return <p className=\"genre\">{this.state.singleMovie.genres[0]}</p>;\n    }\n  }\n\n  generateListItem() {\n    return (\n      <section>\n        <ListItem \n          key={Math.random()}\n          label=\"Release Date\"\n          body={new Date(this.state.singleMovie.release_date).toLocaleDateString()}\n        />\n        <ListItem \n          key={Math.random()}\n          label=\"Runtime\"\n          body={`${this.state.singleMovie.runtime} mins`}\n        />\n        <ListItem \n          key={Math.random()}\n          label=\"Budget\"\n          body={`$${new Intl.NumberFormat(\"en-US\").format(this.state.singleMovie.budget)}`}\n        />\n        <ListItem \n          key={Math.random()}\n          label=\"Revenue\"\n          body={`$${new Intl.NumberFormat(\"en-US\").format(this.state.singleMovie.revenue)}`}\n        />\n      </section>\n    )\n  }\n\n  toggleWatchlist = () => {\n    if (this.state.onWatchlist === false) {\n      this.setState({ onWatchlist: true })\n    } else {\n      this.setState({ onWatchlist: false})\n    }\n  }\n\n\n  render() {\n    return(\n      <section className=\"movie-details\">\n        <section className=\"banner-container\">\n          <img src={this.state.singleMovie.backdrop_path} className=\"banner-img\"/>\n        </section>\n        <section className=\"movie-info\">\n          <section className=\"movie-aside\">\n            <img src={this.state.singleMovie.poster_path} className=\"poster-img\" />\n            {this.generateListItem()}\n          </section>\n          <section className=\"movie-main\">\n            <section className=\"backdrop-overlay\"> \n              <section className=\"responsive-poster\">\n                <img src={this.state.singleMovie.poster_path} className=\"poster-img\" />\n              </section>\n              <section className=\"main-header-details\">\n                <h1 className=\"title\">{this.state.singleMovie.title}</h1>\n                <p className=\"tagline\">{this.state.singleMovie.tagline}</p>\n                <p className=\"rating\">\n                  <span className=\"rating-star\">☆ {this.state.formattedRating}</span>/10\n                </p>\n                <section className=\"genre-list\">\n                  {this.formatGenres()}\n                </section>\n              </section>  \n            </section>\n            <section className=\"overview-box\">\n              <section className=\"rating-watchlist\">\n                <StarRating \n                  currentUser={this.props.currentUser}\n                  currentUserRating={!this.state.currentUserRating ? 0 : this.state.currentUserRating.rating}\n                  canEdit={!this.props.currentUser ? false : true} \n                  setStarRating={this.setStarRating}\n                />\n                {this.state.onWatchlist === true && <button className=\"on-watchlist-button\" onClick={() => this.toggleWatchlist()}>On Watchlist</button>}\n                {this.state.onWatchlist === false && <button className=\"add-watchlist-button\" onClick={() => this.toggleWatchlist()}>+ Add to Watchlist</button>}\n              </section>\n\n              {/* Responsive genres list */}\n              <section className=\"responsive-genre-list\">\n                  {this.formatGenres()}\n              </section>\n              \n              <h3>Synopsis</h3>\n              <p className=\"overview\">{this.state.singleMovie.overview}</p>\n              <section className=\"responsive-list\">\n                {this.generateListItem()}\n              </section>\n            </section>\n            <section className=\"trailer-box\">\n              <h3 className=\"trailer-header\">Trailers</h3>\n              <MovieTrailers \n                id={this.props.id} \n              />\n            </section>\n          </section>\n        </section>\n      </section>\n    )\n  }\n}\n\nexport default MovieDetails;","import React, { Component } from 'react';\nimport './Search.css';\n\nclass Search extends Component {\n  constructor() {\n    super()\n    this.state = {\n      input: ''\n    }\n  }\n  searchByInput = (event) => {\n    event.preventDefault()\n    this.setState({input: event.target.value.toLowerCase()})\n    this.props.getUserInput(event.target.value)\n  }\n\n  render() {\n    return(\n        <input onChange={this.searchByInput} type=\"text\" value={this.state.input} placeholder=\"&#128269; search by movie title\" className=\"search-bar\"></input>\n    )\n  }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport { fetchMovieTrailers } from '../apiCalls';\nimport ReactPlayer from 'react-player/youtube';\nimport './Banner.css';\n\nclass Banner extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentMovie: null,\n      trailers: null,\n      error: ''\n    }\n  }\n\n  componentDidMount() {\n    fetchMovieTrailers(337401)\n    .then(trailers => this.setState({ trailers }))\n    .catch(error => this.setState({ error: error.message}))\n  }\n\n  displayTrailer = () => {\n    const trailerDisplay = this.state.trailers.videos.find(trailer => {\n      return trailer.site === \"YouTube\"\n    })\n\n    if (trailerDisplay) {\n      return(\n        <div className=\"player-wrapper\">\n          <ReactPlayer \n              key={trailerDisplay.id}\n              url={`https://www.youtube.com/watch?v=${trailerDisplay.key}`}\n              className=\"react-player\"\n              width=\"100%\"\n              height=\"100%\"\n              controls={false}\n              muted={true}\n              playing={true}\n              loop={true}\n              config={{\n                youtube: {\n                  playerVars: {\n                    disablekb: 1,\n                    fs: 0,\n                    iv_load_policy: 3,\n                    modestbranding: 1,\n                  },\n                },\n              }}\n          />  \n        </div>\n      )\n    }\n  }\n\n  render() {\n    return(\n      <section>\n        {!this.state.trailers && <p>Loading...</p>}\n        {this.state.trailers && this.displayTrailer()}\n      </section>\n    )\n  }\n}\n\nexport default Banner;","import React, { Component } from 'react';\nimport Login from '../Login/Login';\nimport MovieGrid from '../MovieGrid/MovieGrid';\nimport MovieDetails from '../MovieDetails/MovieDetails';\nimport Search from '../Search/Search';\nimport Banner from '../Banner/Banner';\nimport { fetchMovies, fetchSingleMovie, postLoginCredentials } from '../apiCalls';\nimport { Route, NavLink } from 'react-router-dom';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      error: '',\n      currentUser: null,\n      input: '',\n      dropdownValue: 'all',\n      ratingValue: 'any'\n    }\n  }\n  \n  componentDidMount = () => {\n    fetchMovies()\n    .then(allMovies => this.setState({ movies: allMovies.movies}))\n    .then(() => this.findMovieGenres())\n    .catch(error => this.setState({ error: error.message }))\n  }\n\n  findMovieGenres = () => {\n    this.state.movies.map(movie => {\n      fetchSingleMovie(movie.id)\n      .then(singleMovie => movie.genres = singleMovie.movie.genres)\n    })\n  }\n\n  validateLogin = (loginEmail, loginPassword) => {\n    const credentials = {\n      email: loginEmail,\n      password: loginPassword\n    }\n\n    postLoginCredentials(credentials)\n    .then(user => this.setState({ currentUser: user.user }))\n    .catch(error => this.setState({ error: error.message}))\n  }\n\n  clearError = () => {\n    this.setState({ error: '' })\n  }\n\n  signOut = () => {\n    this.setState({ currentUser: null })\n  }\n\n  get filterMoviesBySelection() {\n    const filterByGenre = this.state.movies.filter(movie => {\n      if (this.state.dropdownValue !== 'all' && movie.genres) {\n        return movie.genres.includes(this.state.dropdownValue)\n      } else {\n        return this.state.movies\n      }\n    })\n\n    const filterByRating = filterByGenre.filter(movie => {\n      if (this.state.ratingValue !== 'any') {\n        const roundedRating = parseInt(movie.average_rating)\n        return roundedRating === parseInt(this.state.ratingValue)\n      } else {\n        return filterByGenre\n      }\n    })\n\n    return filterByRating.filter(movie => {\n      return movie.title.toLowerCase().includes(this.state.input)\n    })\n  }\n\n  getUserInput = (inputValue) => {\n    this.setState({input: inputValue})\n  }\n\n  handleDropdownValue = (event) => {\n    this.setState({ dropdownValue: event.target.name})\n  }\n\n  handleRatingValue = (event) => {\n    this.setState({ ratingValue: event.target.value })\n  }\n\n  clearFilters = () => {\n    this.setState({ input: '', dropdownValue: 'all', ratingValue: 'any' })\n  }\n\n  render() {\n    return(\n      <main>\n        <header>\n          <h1 className='page-title'>underrated</h1>\n          <nav>\n            <NavLink exact to=\"/\" className='nav-labels'>\n              all movies\n            </NavLink>\n            <p className='nav-labels'>watchlist</p>\n            <DropdownButton \n              className='nav-labels' \n              title='account'>\n                {!this.state.currentUser &&\n                  <Login \n                    validateLogin={this.validateLogin} \n                    error={this.state.error} \n                    clearError={this.clearError}\n                  />\n                }\n                {this.state.currentUser &&\n                  <section>\n                    <p>Hello, {this.state.currentUser.name}!</p>\n                    <button onClick={this.signOut}>Sign Out</button>\n                  </section>     \n                }\n            </DropdownButton>\n          </nav>\n        </header>\n        <Route \n          exact \n          path=\"/\" \n          render={() => {\n            return (\n              <section>\n                <Banner />\n                <Search \n                  getUserInput={this.getUserInput} \n                />\n                <section className=\"genre-filter\">\n                  <p className=\"dropdown-text\">showing <span className=\"active-text\">{this.state.dropdownValue}</span> movies</p>\n                  <DropdownButton\n                    title=''\n                    className='genre-dropdown'>\n                    <button onClick={() => this.setState({ dropdownValue: 'all' })}>all</button>\n                    <button name=\"Action\" onClick={(event) => this.handleDropdownValue(event)}>action</button>\n                    <button name=\"Adventure\" onClick={(event) => this.handleDropdownValue(event)}>adventure</button>\n                    <button name=\"Animation\" onClick={(event) => this.handleDropdownValue(event)}>animation</button>\n                    <button name=\"Comedy\" onClick={(event) => this.handleDropdownValue(event)}>comedy</button>\n                    <button name=\"Crime\" onClick={(event) => this.handleDropdownValue(event)}>crime</button>\n                    <button name=\"Drama\" onClick={(event) => this.handleDropdownValue(event)}>drama</button>\n                    <button name=\"Family\" onClick={(event) => this.handleDropdownValue(event)}>family</button>\n                    <button name=\"Fantasy\" onClick={(event) => this.handleDropdownValue(event)}>fantasy</button>\n                    <button name=\"History\" onClick={(event) => this.handleDropdownValue(event)}>history</button>\n                    <button name=\"Horror\" onClick={(event) => this.handleDropdownValue(event)}>horror</button>\n                    <button name=\"Music\" onClick={(event) => this.handleDropdownValue(event)}>music</button>\n                    <button name=\"Romance\" onClick={(event) => this.handleDropdownValue(event)}>romance</button>\n                    <button name=\"Science fiction\" onClick={(event) => this.handleDropdownValue(event)}>science fiction</button>\n                    <button name=\"Thriller\" onClick={(event) => this.handleDropdownValue(event)}>thriller</button>\n                    <button name=\"War\" onClick={(event) => this.handleDropdownValue(event)}>war</button>\n                    <button name=\"Western\" onClick={(event) => this.handleDropdownValue(event)}>western</button>\n                  </DropdownButton>\n                  <p className=\"dropdown-text\">with <span className=\"active-text\">{this.state.ratingValue}</span> rating</p>\n                  <DropdownButton\n                    title=''\n                    className='rating-dropdown'>\n                    <button onClick={() => this.setState({ ratingValue: 'any' })}>any</button>\n                    <button name=\"one\" value=\"1\" onClick={(event) => this.handleRatingValue(event)}>one</button>\n                    <button name=\"two\" value=\"2\" onClick={(event) => this.handleRatingValue(event)}>two</button>\n                    <button name=\"three\" value=\"3\" onClick={(event) => this.handleRatingValue(event)}>three</button>\n                    <button name=\"four\" value=\"4\" onClick={(event) => this.handleRatingValue(event)}>four</button>\n                    <button name=\"five\" value=\"5\" onClick={(event) => this.handleRatingValue(event)}>five</button>\n                    <button name=\"six\" value=\"6\" onClick={(event) => this.handleRatingValue(event)}>six</button>\n                    <button name=\"seven\" value=\"7\" onClick={(event) => this.handleRatingValue(event)}>seven</button>\n                    <button name=\"eight\" value=\"8\" onClick={(event) => this.handleRatingValue(event)}>eight</button>\n                    <button name=\"nine\" value=\"9\" onClick={(event) => this.handleRatingValue(event)}>nine</button>\n                    <button name=\"ten\" value=\"10\" onClick={(event) => this.handleRatingValue(event)}>ten</button>\n                  </DropdownButton>\n                  {this.state.input !== '' || this.state.dropdownValue !== 'all' || this.state.ratingValue !== 'any' &&\n                    <button className=\"clear\" onClick={() => this.clearFilters()}>clear</button>\n                  }\n                </section>\n                <MovieGrid\n                  movies={this.filterMoviesBySelection}  \n                />\n              </section>\n            )\n          }}\n        />\n        <Route \n          exact\n          path=\"/movie/:id\"\n          render={( { match }) => {\n            return (\n              <MovieDetails \n                id={match.params.id}\n                currentUser={this.state.currentUser}\n             />)\n          }}\n        />\n      </main>\n    ) \n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App/App';\n\nconst router = <BrowserRouter basename='/underrated'><App /></BrowserRouter>\n\nReactDOM.render(\n router,\n  document.getElementById('root')\n);"],"sourceRoot":""}